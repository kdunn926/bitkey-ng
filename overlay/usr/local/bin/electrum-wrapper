#!/bin/bash -e

fatal() {
    zenity --width=350 --error --text "$@"
    exit 1
}

usage() {
    echo "syntax: $(basename $0) cold-offline|cold-online|hot-online"
    exit 1
}

info() {
    #echo -n "$@" > $infofile
    env DISPLAY=:0 DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus notify-send -t 750 --icon=dialog-information "$@"
}

locate_storage_path() {
    dirname=$1
    filename=$2
    for d in $(ls /media); do
        storage_path="/media/$d/$dirname"
        if [ -e $storage_path/$filename ] && [ -w $storage_path/$filename ]; then
            echo $storage_path
            return
        fi
    done

    for d in $(ls /media); do
        storage_path="/media/$d/$dirname"
        if [ -d $storage_path ] && [ -w $storage_path ]; then
            echo $storage_path
            return
        fi
    done

    for d in $(ls /media); do
        storage_path="/media/$d/$dirname"
        if mountpoint -q /media/$d && [ -w "/media/$d" ]; then
            mkdir -p $storage_path
            echo $storage_path
            return
        fi
    done
}

if [[ "$#" != "1" ]]; then
    usage
fi

storage_dirname="bitkey-data"
mount_path="/mnt/bitkey-data"

mode=`cat /proc/cmdline | awk -F'bitkey=' '{ print $2 }' | cut -f 1 -d ' '`
case "$mode" in
    cold-offline|cold-online|hot-online) ;;
    *) fatal "unsupported mode: $mode"
esac

# verify electrum isn't running
if pidof -x electrum >/dev/null; then
    fatal "electrum is already running..."
fi

# verify (another) electrum-wrapper isn't running
if pidof -x electrum-wrapper -o %PPID >/dev/null; then
    fatal "electrum-wrapper is already running..."
fi

# verify mount_path isn't in use
if mountpoint -q $mount_path; then
    fatal "$mount_path is currently in use...\nTip: umount $mount_path"
fi

# setup info dialog
infofile=$(mktemp)
info "loading ..."
#info-dialog --title="electrum-wrapper" $infofile &
trap "rm -f -- '$infofile'" INT TERM EXIT

# locate and setup storage
info "checking USB devices ..."
storage_path=$(locate_storage_path $storage_dirname $mode)
storage_file=$storage_path/$mode

if [ -z $storage_path ]; then
    error="Unable to locate USB device to use as persistent storage.\n"
    error+="Please insert a USB device and try again."
    fatal "$error"
fi

# plaintext seedless watch wallet (cold-online)
if [ "$mode" == "cold-online" ]; then
    ELECTRUM_WIZARD_ACTION=watching electrum --wallet=$storage_file &
    exit 0
fi

# create and or mount encrypted storage (cold-offline / hot-online)
passwd_text="Enter wallet passphrase"
if [ ! -e "$storage_file" ]; then
    passwd=$(passphrase-zxcvbn --confirm --title="Setup: ${storage_file}" --text="$passwd_text")

    #info "creating $storage_file ..."
    dd if=/dev/zero of=$storage_file bs=1M count=21

    info "creating encrypted file $storage_file ..."
    echo $passwd | sudo cryptsetup luksFormat $storage_file

    info "decrypting $storage_file ..."
    echo $passwd | sudo cryptsetup luksOpen $storage_file bitkey

    info "creating $storage_file filesystem ..."
    sudo mkfs.ext2 /dev/mapper/bitkey
else
    for attempt in {1..5}; do
        passwd=$(passphrase-zxcvbn --hide --title="Decrypt: ${storage_file}" --text="$passwd_text")
        info "attempting to mount $storage_file ..."
        if echo $passwd | sudo cryptsetup luksOpen $storage_file bitkey; then
            info "decrypting $storage_file ..."
            break
        fi
        zenity --width=300 --error --text "Invalid passphrase, please try again"
    done
fi

# mount the luks device (/dev/mapper/bitkey) to userspace
info "mounting ..."
mount /mnt/bitkey-data

wallet_path=$mount_path/$mode
sudo chown -R user /mnt/bitkey-data

# close info dialog
rm -f $infofile

# start electrum in foreground
[ "$mode" != "cold-offline" ] && proxy_args="-s sock5:localhost:9050"
[ "$mode" == "cold-offline" ] && extra_args="--offline"
electrum $proxy_args $extra_args --wallet=$wallet_path

# setup info dialog
infofile=/tmp/electrum.log
#info-dialog --title="electrum-wrapper" $infofile &
trap "rm -f -- '$infofile'" INT TERM EXIT

echo seedless watch wallet is disabled for lack of the deseed function
# create seedless watch wallet (cold-online)
#if [ -e "$wallet_path" ] && [ ! -e "$storage_path/cold-online" ]; then
    #info "creating $storage_path/cold-online..."
    #echo y | electrum deseed -w $wallet_path
    #mv $wallet_path.seedless $storage_path/cold-online
#fi

# umount encrypted storage
info "syncing filesystem ..."
sync && sleep 2

info "umounting encrypted storage ..."
while true; do
    if umount /mnt/bitkey-data && sudo cryptsetup luksClose bitkey; then
        break
    fi
    zenity --width=350 --error --text "unable to unmount encrypted storage. please close all programs that may be blocking."
done

